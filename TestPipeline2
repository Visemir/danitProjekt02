pipeline {
    agent {
        label 'node01' 
    }

    environment {
       IMAGE_NAME = 'kalinichenkoit/step2imgt:latest'
    }

    stages {
        stage('Clone repository') {
            steps {
                git  'https://github.com/Visemir/step2.git'
            }
        }

    stage('Build Docker Image') {
            steps {
                script {
                    docker.build("${IMAGE_NAME}", "--no-cache -f Dockerfile .")
                }
            }
        }
    
    stage ('Test01'){
        steps{
            script{
                try{
                    docker.image("${IMAGE_NAME}").inside('--entrypoint=""'){
                        sh 'npm install'
                        sh 'npm install  jest'
                        sh 'npm install  supertest'
                        sh 'npm test'
                    }
                }
                catch (Exception e){
                    echo 'Test Faild'
                    currentBuild.result = 'FAILURE'
                }
            }
        }
    }
    
    stage('Test02') {
        steps {
            script {
                
                docker.image("${IMAGE_NAME}").withRun('-p 3000:3000') {
                    script {
                        def response = sh(script: 'curl -s -o /dev/null -w "%{http_code}" http://localhost:3000', returnStdout: true).trim()
                        if (response != '200') {
                        error "Server did not return 200 OK, instead returned ${response}"
                        }
                        else {
                            echo "Response code: ${response}. Test passed"
                        }
                    }
                }
                        
            }
                
        }
    }
   
    
    
    stage('Push to Docker Hub') {
            steps {
                script {
                    withCredentials([usernamePassword(credentialsId: 'dockerpass', passwordVariable: 'DOCKER_HUB_PASSWORD', usernameVariable: 'DOCKER_HUB_USERNAME')]) {
                        sh "docker login -u $DOCKER_HUB_USERNAME -p $DOCKER_HUB_PASSWORD"
                        sh "docker push ${IMAGE_NAME}"
                    }
                }
            }
        }    
    }

    post {
        success {
            echo 'Tests passed successfully, image sent to Docker Hub.'
        }
        failure {
            echo 'The test is not passed.'
        }
    }
}
